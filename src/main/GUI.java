/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import Tokenizer.Token;
import Tokenizer.Tokenizer;
import Parser.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.TreeMap;


/**
 *
 * @author Adolfo
 */
public class GUI extends javax.swing.JFrame {

    //Se define una variable tipo HashMap de tipo static, para poder ser manipulada entre diferentes clases
    //La ventaja de utilizar HashMap es que actualiza los valores
    //public static HashMap variablesmap = new HashMap();
    public static TreeMap variablesmap = new TreeMap();
    public static String ultimoresultado;  //Variable global para contener el ultimo resultado de un calculo, se utiliza para el comando GRAB.
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Output_Text = new javax.swing.JTextArea();
        GO = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        source = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        screen = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setName("Source"); // NOI18N

        Output_Text.setColumns(20);
        Output_Text.setRows(5);
        Output_Text.setName("Output_Text"); // NOI18N
        jScrollPane1.setViewportView(Output_Text);

        GO.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GO.setText("Enter");
        GO.setToolTipText("");
        GO.setActionCommand("GO");
        GO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GOActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Pantalla");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tokens:");

        source.setToolTipText("");
        source.setName("source"); // NOI18N

        screen.setEditable(false);
        screen.setBackground(new java.awt.Color(204, 204, 204));
        screen.setColumns(20);
        screen.setRows(5);
        jScrollPane2.setViewportView(screen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GO, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 134, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GO, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Impresor es un método para imprimir en la pantalla de la consola
    //Utiliza un la hora para darle más sentido a la digitación de comandos
    
    public static void impresor(String line){
        
        DateFormat dateformat = new SimpleDateFormat("HH:mm:ss");
        Date date = new Date();
        String hora = "["+dateformat.format(date)+"]   ";
        screen.setText(screen.getText()+hora+line+"\n");
        
    }
    
    
    private void GOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GOActionPerformed

        //Boton principal.
        Boolean indefinido = true; //Esta variable va a indicar si el comando no existe
        
        
        //Se instancia el tokenizer
        String resultado = "";
        String Source = source.getText().toUpperCase(); //Toda entrada de ahora en adelante es en mayuscula
        source.setText(""); // Se limpia el input.
        impresor(Source); // Impresion en pantalla del ultimo comando
        
        Tokenizer tokenizer = new Tokenizer(Source);
        
        //Se necesita una copia por que el while no lo reinicia.
        Tokenizer tokenizer2 = new Tokenizer(Source);
        
        while (tokenizer.hasNextToken()) {
            Token t = tokenizer.nextToken();
            resultado = resultado + t.getType() + " : " + t.getToken() + "\n";
        }
        //Una vez que sale del ciclo imprime el resultado de los tokens encontrados
        Output_Text.setText(resultado);
     
        
       //Se llaman a los parsers a ver cual concuerda con el.
        
       
       SystemParser sparser = new SystemParser(Source, tokenizer2);
       VariableParser vparser = new VariableParser(Source, tokenizer2);
       
       if (sparser.verificar_regex()){
           sparser.principal();
           indefinido = false;
       }
       
       if (vparser.verificar_regex()){
           vparser.principal();
           indefinido = false;
       }
       
       if (indefinido==true){
           impresor("Error 101 Comando Indefinido");
       }
       
       
      //Fin del boton principal
    }//GEN-LAST:event_GOActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                
            }
        });
    }
    
    //Este codigo fue autogenerado, sin embargo aqu[i lo estoy modificando para poderlo accesar
    //desde una clase externa, más que todo para el LIMP.
    
    private javax.swing.JButton GO;
    private javax.swing.JTextArea Output_Text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea screen;
    private javax.swing.JTextField source;
    
    
    
/*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GO;
    private javax.swing.JTextArea Output_Text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea screen;
    private javax.swing.JTextField source;
    // End of variables declaration//GEN-END:variables

*/
}
